<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="jadx.tests.integration.others.TestIssue13b" tests="1" skipped="0" failures="0" errors="0" timestamp="2016-04-22T15:41:00" hostname="box723" time="0.131">
  <properties/>
  <testcase name="test" classname="jadx.tests.integration.others.TestIssue13b" time="0.131"/>
  <system-out><![CDATA[15:41:00 INFO  - converting to dex: jadx-tmp-36700265668583661784928504720923.jar ...
15:41:00 INFO  - loading ...
15:41:00 DEBUG - Load: /tmp/jadx-tmp-36700265668583661784928504720923.jar
15:41:00 DEBUG - '.arsc' file not found
15:41:00 WARN  - Unknown 'R' class, create references to 'R'
-----------------------------------------------------------
package jadx.tests.integration.others;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.CountDownLatch;

public class TestIssue13b$TestCls {
    private static final String PROPERTIES_FILE = "";
    private static final String TAG = "";
    private String mC2KServerHost = "";
    private int mC2KServerPort = 0;
    private final CountDownLatch mInitializedLatch = new CountDownLatch(1);
    private String mSuplServerHost = "";
    private int mSuplServerPort = 0;

    private static class Log {
        private Log() {
        }

        public static void e(String tag, String s) {
        }
    }

    public TestIssue13b$TestCls() {
        Properties mProperties = new Properties();
        try {
            FileInputStream stream = new FileInputStream(new File(""));
            mProperties.load(stream);
            stream.close();
            this.mSuplServerHost = mProperties.getProperty("SUPL_HOST");
            String portString = mProperties.getProperty("SUPL_PORT");
            if (!(this.mSuplServerHost == null || portString == null)) {
                try {
                    this.mSuplServerPort = Integer.parseInt(portString);
                } catch (NumberFormatException e) {
                    Log.e("", "unable to parse SUPL_PORT: " + portString);
                }
            }
            this.mC2KServerHost = mProperties.getProperty("C2K_HOST");
            portString = mProperties.getProperty("C2K_PORT");
            if (!(this.mC2KServerHost == null || portString == null)) {
                try {
                    this.mC2KServerPort = Integer.parseInt(portString);
                } catch (NumberFormatException e2) {
                    Log.e("", "unable to parse C2K_PORT: " + portString);
                }
            }
        } catch (IOException e3) {
            Log.e("", "Could not open GPS configuration file ");
        }
        new Thread().start();
        while (true) {
            try {
                this.mInitializedLatch.await();
                break;
            } catch (InterruptedException e4) {
                Thread.currentThread().interrupt();
            }
        }
    }
}
-----------------------------------------------------------
Compilation: PASSED
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
