import sys

## Autogenerated by LLVM/Clang configuration.
# Do not edit!
config.host_triple = "x86_64-unknown-linux-gnu"
config.target_triple = "x86_64-unknown-linux-gnu"
config.llvm_src_root = "/tmp/mcsema/llvm-3.5"
config.llvm_obj_root = "/tmp/mcsema/build/llvm-3.5"
config.llvm_tools_dir = "/tmp/mcsema/build/llvm-3.5/./bin"
config.llvm_shlib_dir = "/tmp/mcsema/build/llvm-3.5/./lib"
config.llvm_shlib_ext = ".so"
config.llvm_exe_ext = ""
config.lit_tools_dir = ""
config.python_executable = "/usr/bin/python"
config.ocamlopt_executable = ""
config.enable_shared = 1
config.enable_assertions = 0
config.targets_to_build = " X86"
config.llvm_bindings = ""
config.host_os = "Linux"
config.host_arch = "x86_64"
config.llvm_use_intel_jitevents = "OFF"
config.llvm_use_sanitizer = ""
config.have_zlib = "1"

# Support substitution of the tools_dir with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
    config.llvm_shlib_dir = config.llvm_shlib_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

# Let the main config do the real work.
lit_config.load_config(config, "/tmp/mcsema/llvm-3.5/test/lit.cfg")
